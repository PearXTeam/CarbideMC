package ru.pearx.libmc;

import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLServerStartingEvent;
import net.minecraftforge.fml.common.network.NetworkRegistry;
import net.minecraftforge.fml.common.network.simpleimpl.SimpleNetworkWrapper;
import net.minecraftforge.fml.relauncher.Side;
import org.apache.logging.log4j.Logger;
import ru.pearx.libmc.common.PXLCapabilities;
import ru.pearx.libmc.common.networking.packets.CPacketSyncASMState;
import ru.pearx.libmc.common.structure.CommandStructure;

import java.util.Collections;

/*
 * Created by mrAppleXZ on 10.07.17 21:39.
 */
@Mod(modid = PXLMC.MODID, version = PXLMC.VERSION, acceptedMinecraftVersions = "", name = PXLMC.NAME)
public class PXLMC
{
    public static final String NAME = "PearXLib MC";
    public static final String MODID = "pxlmc";
    public static final String VERSION = "@VERSION@";

    public static final SimpleNetworkWrapper NETWORK = NetworkRegistry.INSTANCE.newSimpleChannel(MODID);
    private static Logger log;

    @Mod.EventHandler
    public static void preInit(FMLPreInitializationEvent e)
    {
        ModMetadata data = e.getModMetadata();
        data.url = "https://minecraft.curseforge.com/projects/pearxlib-mc";
        data.authorList = Collections.singletonList("mrAppleXZ");
        data.autogenerated = false;
        data.description = "A common library for all MC mods by PearX Team.";
        data.version = VERSION;
        data.modId = MODID;
        data.name = NAME;

        log = e.getModLog();

        PXLCapabilities.register();
    }

    @Mod.EventHandler
    public static void init(FMLInitializationEvent e)
    {
        NETWORK.registerMessage(CPacketSyncASMState.Handler.class, CPacketSyncASMState.class, 0, Side.CLIENT);
    }

    @Mod.EventHandler
    public static void onServerStart(FMLServerStartingEvent e)
    {
        e.registerServerCommand(new CommandStructure());
    }

    public static Logger getLog()
    {
        return log;
    }
}
